{
	"id": "34b6b463c00249ddeabc26a3daa91a75",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "byzantium"
		},
		"sources": {
			"testing.sol": {
				"content": "pragma solidity > 0.8.0 < 0.9.0;\r\n\r\ncontract Test {\r\n    \r\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"testing.sol": {
				"Test": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"testing.sol\":36:60  contract Test {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"testing.sol\":36:60  contract Test {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fabdc0fabf6af118072c4bde8e9249114848c36b6f0f3302ec1cb344b63c6bec64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220fabdc0fabf6af118072c4bde8e9249114848c36b6f0f3302ec1cb344b63c6bec64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0xBD 0xC0 STATICCALL 0xBF PUSH11 0xF118072C4BDE8E92491148 BASEFEE 0xC3 PUSH12 0x6F0F3302EC1CB344B63C6BEC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "36:24:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220fabdc0fabf6af118072c4bde8e9249114848c36b6f0f3302ec1cb344b63c6bec64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0xBD 0xC0 STATICCALL 0xBF PUSH11 0xF118072C4BDE8E92491148 BASEFEE 0xC3 PUSH12 0x6F0F3302EC1CB344B63C6BEC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "36:24:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 36,
									"end": 60,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 36,
									"end": 60,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36,
									"end": 60,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36,
									"end": 60,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 36,
									"end": 60,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36,
									"end": 60,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 36,
									"end": 60,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36,
									"end": 60,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 36,
									"end": 60,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36,
									"end": 60,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36,
									"end": 60,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 36,
									"end": 60,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36,
									"end": 60,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 36,
									"end": 60,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36,
									"end": 60,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 60,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36,
									"end": 60,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 60,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36,
									"end": 60,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 36,
									"end": 60,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 36,
									"end": 60,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fabdc0fabf6af118072c4bde8e9249114848c36b6f0f3302ec1cb344b63c6bec64736f6c63430008070033",
									".code": [
										{
											"begin": 36,
											"end": 60,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 36,
											"end": 60,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36,
											"end": 60,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36,
											"end": 60,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36,
											"end": 60,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36,
											"end": 60,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"testing.sol\":\"Test\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"testing.sol\":{\"keccak256\":\"0x2a92752613c8da1500bb819dabd782663e7ae1dfeb240d8556e875ee623edc38\",\"urls\":[\"bzz-raw://2fa40799473d7e01c26dd31f176a4f256504f72f107a13a3568039bc7fedd499\",\"dweb:/ipfs/QmUCwcBmANWp3NUkWeZ8gZ4xRzj8cdZfidH4sZXpYFXtJq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> testing.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "testing.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"testing.sol": {
				"ast": {
					"absolutePath": "testing.sol",
					"exportedSymbols": {
						"Test": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Test",
							"nameLocation": "45:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "36:24:0",
							"usedErrors": []
						}
					],
					"src": "0:60:0"
				},
				"id": 0
			}
		}
	}
}